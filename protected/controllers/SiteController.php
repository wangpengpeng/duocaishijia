	<?php		class SiteController extends YController	{		/**		 * Declares class-based actions.		 */		public function actions ()		{			return array(				// captcha action renders the CAPTCHA image displayed on the contact page				'captcha' => array(					'class'     => 'CCaptchaAction',					'backColor' => 0xFFFFFF,					'minLength'=>4,  //最短为4位					'maxLength'=>4,   //是长为4位				),				// page action renders "static" pages stored under 'protected/views/site/pages'				// They can be accessed via: index.php?r=site/page&view=FileName				'page'    => array(					'class' => 'CViewAction',				),			);		}		/**		 * This is the default 'index' action that is invoked		 * when an action is not explicitly requested by users.		 */		public function actionIndex ($city = null)		{			if (isset($city)){							Yii::app()->session['city'] = $city;  //全局变量						}			$ads = Ad::model()->findAll(array(				'condition' => 'id not in (14,15)',			));			$ads2 = Ad::model()->findAll(array(				'condition' => 'id  in (14,15)',			));			$posts = Post::model()->findAll(new CDbCriteria(array('limit' => 5, 'order' => 'id desc')));			$hotCategories = Category::model()->hot()->level(2)->limit(3)->findAll();			$hotItems = array();			foreach ($hotCategories as $hotCategory) {				$hotItems[$hotCategory->name] = array(					'id'   => $hotCategory->category_id,					'item' => Item::getItemsByCategory($hotCategory, 4),				);			}			$newCategories = Category::model()->new()->limit(2)->findAll();//			dump($newCategories);			$newItems = array();			foreach ($newCategories as $key => $newCategory) {				$newItems[$newCategory->name] = array(					'id'   => $newCategory->category_id,					'item' => '',				);				if ($key == 0) {					$newItems[$newCategory->name]['item'] = Item::getItemsByCategory($newCategory, 7);				} else {					$newItems[$newCategory->name]['item'] = Item::getItemsByCategory($newCategory, 8);				}			}			Yii::app()->params['ads'] = $ads;			//        $newItems[0] = array_slice($newItems[0], 7);			$this->render('index', array(				'hotAds'        => $ads2,				'ads'           => $ads,				'posts'         => $posts,				'hotCategories' => $hotCategories,				'hotItems'      => $hotItems,				'newCategories' => $newCategories,				'newItems'      => $newItems,			));		}		public function actionEmail ()		{			$message = 'Hello World!';			Yii::app()->mailer->Host = 'smtp.gmail.com';			Yii::app()->mailer->IsSMTP();			Yii::app()->mailer->SMTPAuth = true; //設定SMTP需要驗證			Yii::app()->mailer->SMTPSecure = "ssl"; // Gmail的SMTP主機需要使用SSL連線			Yii::app()->mailer->Port = 465; //Gamil的SMTP主機的SMTP埠位為465埠。			Yii::app()->mailer->CharSet = "big5"; //設定郵件編碼			Yii::app()->mailer->Username = "yhxxlm@gmail.com"; //設定驗證帳號			Yii::app()->mailer->Password = ""; //設定驗證密碼			Yii::app()->mailer->From = 'yhxxlm@gmail.com';			Yii::app()->mailer->FromName = 'yhxxlm';			Yii::app()->mailer->AddReplyTo('yhxxlm@gmail.com');			Yii::app()->mailer->AddAddress('yhxxlm@foxmail.com');			Yii::app()->mailer->Subject = 'Yii rulez!';			Yii::app()->mailer->Body = $message;			Yii::app()->mailer->Send();		}		/**		 * This is the action to handle external exceptions.		 */		public function actionError ()		{			if ($error = Yii::app()->errorHandler->error) {				if (Yii::app()->request->isAjaxRequest) {					echo $error['message'];				} else {					$this->render('error', $error);				}			}		}		/**		 * Displays the contact page		 */		public function actionContact ()		{			$model = new ContactForm;			if (isset($_POST['ContactForm'])) {				$model->attributes = $_POST['ContactForm'];				if ($model->validate()) {					$headers = "From: {$model->email}\r\nReply-To: {$model->email}";					mail(Yii::app()->params['adminEmail'], $model->subject, $model->body, $headers);					Yii::app()->user->setFlash('contact', 'Thank you for contacting us. We will respond to you as soon as possible.');					$this->refresh();				}			}			$this->render('contact', array('model' => $model));		}		/**		 * Displays the login page		 */		public function actionLogin ()		{			$model = new LoginForm;			// if it is ajax validation request			if (isset($_POST['ajax']) && $_POST['ajax'] === 'login-form') {				echo CActiveForm::validate($model);				Yii::app()->end();			}			// collect user input data			if (isset($_POST['LoginForm'])) {				$model->attributes = $_POST['LoginForm'];				// validate user input and redirect to the previous page if valid				if ($model->validate() && $model->login()) {					$this->redirect(Yii::app()->user->returnUrl);				}			}			// display the login form			$this->render('login', array('model' => $model));		}		/**		 * Logs out the current user and redirect to homepage.		 */		public function actionLogout ()		{			Yii::app()->user->logout();			$this->redirect(Yii::app()->homeUrl);		}		public function actionCart ()		{			$this->render('cart');		}		//调用商店页面接口		public function actionChangeCity ()		{			$criteria = new CDbCriteria();			$criteria->select = 'city';			$criteria->distinct = true;			$stores = DcStore::model()->findAll($criteria);			$sections = Section::model()->findAll();			$sectionsArea = array();			$city = array();			foreach($stores as $store){				$city[] = $store->city;			}			foreach ($sections as $section){				$s = array();				foreach($city as $city1){					$key = Area::model()->findByPk($city1);					if($key->section_id == $section->section_id){						$s[] = $city1;					}				}				$sectionsArea[$section->section_id] = $s;			}			$client_ip = $_SERVER['REMOTE_ADDR'];			$this->render("ChangeCity", array(				'stores' => $stores ,				'sectionsArea' => $sectionsArea,			));		}		public function actionHomeBeauty ()		{			$this->render('homeBeauty');		}		public function actionServerProcess ()		{			$this->render('serverProcess');		}		public function actionServerAdvantage ()		{			$this->render('serverAdvantage');		}		public function actionMenDian ()        {	        $criteria = new CDbCriteria();	        $criteria->select = 'city';	        $criteria->distinct = true;	        $stores = DcStore::model()->findAll($criteria);	        $sections = Section::model()->findAll();	        $sectionsArea = array();	        $city = array();	        foreach($stores as $store){		        $city[] = $store->city;	        }	        foreach ($sections as $section){		        $s = array();		        foreach($city as $city1){			        $key = Area::model()->findByPk($city1);			        if($key->section_id == $section->section_id){				        $s[] = $city1;			        }		        }		        $sectionsArea[$section->section_id] = $s;	        }            $this->render('menDian2', array(	        'stores' => $stores ,	        'sectionsArea' => $sectionsArea,        ));        }		}	